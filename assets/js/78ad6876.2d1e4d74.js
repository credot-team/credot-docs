(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{132:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},g=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,b=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return n?o.a.createElement(b,i(i({ref:t},l),{},{components:n})):o.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(132)),c={title:"Sendlog",sidebar_position:2},i={unversionedId:"project-settings/graylog/sendlog",id:"project-settings/graylog/sendlog",isDocsHomePage:!1,title:"Sendlog",description:"\u5354\u5b9a",source:"@site/docs/project-settings/graylog/sendlog.md",sourceDirName:"project-settings/graylog",slug:"/project-settings/graylog/sendlog",permalink:"/credot-docs/docs/project-settings/graylog/sendlog",editUrl:"https://github.com/skynocover/credot-docs/tree/documentation/docs/project-settings/graylog/sendlog.md",version:"current",sidebarPosition:2,frontMatter:{title:"Sendlog",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Docker\u5b89\u88dd",permalink:"/credot-docs/docs/project-settings/graylog/docker"},next:{title:"\u8a2d\u5b9a Husky",permalink:"/credot-docs/docs/config/husky"}},s=[{value:"\u5354\u5b9a",id:"\u5354\u5b9a",children:[]},{value:"api",id:"api",children:[]}],l={toc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"\u5354\u5b9a"},"\u5354\u5b9a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://docs.fluentbit.io/manual/pipeline/outputs/gelf"},"gelf \u5354\u5b9a")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Syslog#cite_note-opengroupSyslog-8"},"log-level 1~7"))),Object(a.b)("h2",{id:"api"},"api"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"export const emerg = 0; // A panic condition.\nexport const alert = 1; // A condition that should be corrected immediately, such as a corrupted system database.\nexport const crit = 2; // Hard device errors.\nexport const err = 3;\nexport const warning = 4;\nexport const notice = 5; // Conditions that are not error conditions, but that may require special handling.\nexport const info = 6;\nexport const debug = 7; // only when debugging a program.\n\nconst host = 'peman';\nconst graylogURL = 'http://localhost:12201/gelf';\n\nexport const log = async (\n  level: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7,\n  message: string,\n  others?: object,\n) => {\n  let body = {\n    host, // \u7528\u4f86\u7d66source\u67e5\u8a62\u7528\u540d\u7a31\n    level, // \u7528\u4f86\u986f\u793a\u8a0a\u606f\u5c64\u7d1a\n    short_message: message,\n    ...others,\n  };\n  try {\n    let result = await axios.post(graylogURL, body);\n    if (result.status !== 202) {\n      console.log('send graylog fail, error: ', result.config.data);\n    }\n  } catch (error) {\n    console.log('send graylog fail, error: ', error);\n  }\n};\n")))}p.isMDXComponent=!0}}]);